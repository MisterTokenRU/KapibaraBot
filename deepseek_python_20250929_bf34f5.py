import discord
from discord.ext import commands, tasks
from discord import ui
import os
import asyncio
from datetime import datetime
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ–Ω—Ç–æ–≤
intents = discord.Intents.default()
intents.message_content = True
intents.members = True

bot = commands.Bot(command_prefix='!', intents=intents)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –†–ï–ê–õ–¨–ù–´–ï ID)
MODERATOR_ROLE_ID = 123456789012345678  # ID —Ä–æ–ª–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
LOG_CHANNEL_ID = 123456789012345679     # ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è –ª–æ–≥–æ–≤
PENDING_REQUESTS_CHANNEL_ID = 123456789012345680  # ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è –∑–∞—è–≤–æ–∫

# –°–ª–æ–≤–∞—Ä—å —Å —Ä–æ–ª—è–º–∏ –ø–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º (–ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –†–ï–ê–õ–¨–ù–´–ï ID –†–û–õ–ï–ô)
ROLES_BY_ORGANIZATION = {
    "–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è 1": [123456789012345681],
    "–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è 2": [123456789012345682],
    "–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è 3": [123456789012345683],
    "–¢–µ—Å—Ç–æ–≤–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è": [123456789012345684]
}

# –•—Ä–∞–Ω–∏–ª–∏—â–∞ –¥–∞–Ω–Ω—ã—Ö
pending_requests = {}
stat_requests = {}

class OrganizationSelect(ui.Select):
    def __init__(self):
        options = [
            discord.SelectOption(
                label="–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è 1", 
                description="–†–æ–ª–∏ –¥–ª—è –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ 1",
                emoji="üè¢"
            ),
            discord.SelectOption(
                label="–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è 2", 
                description="–†–æ–ª–∏ –¥–ª—è –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ 2",
                emoji="üèõÔ∏è"
            ),
            discord.SelectOption(
                label="–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è 3", 
                description="–†–æ–ª–∏ –¥–ª—è –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ 3",
                emoji="üè¨"
            ),
            discord.SelectOption(
                label="–¢–µ—Å—Ç–æ–≤–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è", 
                description="–î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞",
                emoji="üß™"
            ),
        ]
        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é",
            min_values=1,
            max_values=1,
            options=options,
            custom_id="organization_select"
        )

    async def callback(self, interaction: discord.Interaction):
        selected_org = self.values[0]
        user = interaction.user
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ pending –∑–∞—è–≤–∫–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if user.id in pending_requests:
            await interaction.response.send_message(
                "‚ùå –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏!",
                ephemeral=True
            )
            return
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞—è–≤–∫—É
        request_id = f"{user.id}_{int(datetime.now().timestamp())}"
        pending_requests[user.id] = {
            'request_id': request_id,
            'user_id': user.id,
            'username': str(user),
            'organization': selected_org,
            'timestamp': datetime.now(),
            'status': 'pending'
        }
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º
        await self.send_moderation_request(interaction, user, selected_org, request_id)
        
        # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        embed = discord.Embed(
            title="üì® –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!",
            description=f"–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–µ–π **{selected_org}** –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é.",
            color=0xffff00
        )
        embed.add_field(
            name="–°—Ç–∞—Ç—É—Å",
            value="‚è≥ –û–∂–∏–¥–∞–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º",
            inline=False
        )
        embed.add_field(
            name="–ß—Ç–æ –¥–∞–ª—å—à–µ?",
            value="–û–∂–∏–¥–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ä–µ—à–µ–Ω–∏–∏ –ø–æ –≤–∞—à–µ–π –∑–∞—è–≤–∫–µ.",
            inline=False
        )
        embed.set_footer(text=f"ID –∑–∞—è–≤–∫–∏: {request_id}")
        
        await interaction.response.send_message(embed=embed, ephemeral=True)

    async def send_moderation_request(self, interaction, user, organization, request_id):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞—è–≤–∫—É –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é"""
        guild = interaction.guild
        mod_channel = guild.get_channel(PENDING_REQUESTS_CHANNEL_ID)
        
        if not mod_channel:
            return
        
        embed = discord.Embed(
            title="üÜï –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–æ–ª—å",
            color=0x00ffff,
            timestamp=datetime.now()
        )
        embed.add_field(name="üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=f"{user.mention}\n{user}", inline=True)
        embed.add_field(name="üè¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è", value=organization, inline=True)
        embed.add_field(name="üìÖ –î–∞—Ç–∞ –ø–æ–¥–∞—á–∏", value=datetime.now().strftime("%d.%m.%Y %H:%M"), inline=True)
        embed.add_field(name="üÜî ID –∑–∞—è–≤–∫–∏", value=request_id, inline=False)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        join_date = user.joined_at.strftime("%d.%m.%Y") if user.joined_at else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
        account_age = (datetime.now().replace(tzinfo=None) - user.created_at.replace(tzinfo=None)).days
        embed.add_field(
            name="üìä –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", 
            value=f"–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ —Å: {join_date}\n–ê–∫–∫–∞—É–Ω—Ç—É: {account_age} –¥–Ω–µ–π", 
            inline=False
        )
        
        view = ModerationView(request_id, user.id, organization)
        
        message = await mod_channel.send(
            content=f"<@&{MODERATOR_ROLE_ID}> –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ!",
            embed=embed,
            view=view
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        pending_requests[user.id]['message_id'] = message.id

class ModerationView(ui.View):
    def __init__(self, request_id, user_id, organization):
        super().__init__(timeout=None)
        self.request_id = request_id
        self.user_id = user_id
        self.organization = organization

    @ui.button(label="‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", style=discord.ButtonStyle.success, custom_id="approve")
    async def approve_button(self, interaction: discord.Interaction, button: ui.Button):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
        if not await self.check_moderator(interaction):
            return
        
        user = interaction.guild.get_member(self.user_id)
        if not user:
            await interaction.response.send_message("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!", ephemeral=True)
            return
        
        # –í—ã–¥–∞–µ–º —Ä–æ–ª–∏
        if self.organization in ROLES_BY_ORGANIZATION:
            added_roles = []
            for role_id in ROLES_BY_ORGANIZATION[self.organization]:
                role = interaction.guild.get_role(role_id)
                if role:
                    await user.add_roles(role)
                    added_roles.append(role.mention)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏
            if self.user_id in pending_requests:
                pending_requests[self.user_id]['status'] = 'approved'
                pending_requests[self.user_id]['moderator'] = str(interaction.user)
                pending_requests[self.user_id]['processed_at'] = datetime.now()
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏
            embed = interaction.message.embeds[0]
            embed.color = 0x00ff00
            embed.add_field(name="‚úÖ –°—Ç–∞—Ç—É—Å", value="–û–¥–æ–±—Ä–µ–Ω–æ", inline=True)
            embed.add_field(name="üëÆ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=interaction.user.mention, inline=True)
            embed.add_field(name="‚è∞ –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏", value=datetime.now().strftime("%H:%M"), inline=True)
            
            # –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫–∏
            for item in self.children:
                item.disabled = True
            
            await interaction.message.edit(embed=embed, view=self)
            
            # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            try:
                user_embed = discord.Embed(
                    title="‚úÖ –ó–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞!",
                    description=f"–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é **{self.organization}** –±—ã–ª–∞ –æ–¥–æ–±—Ä–µ–Ω–∞.",
                    color=0x00ff00
                )
                if added_roles:
                    user_embed.add_field(
                        name="–í—ã–¥–∞–Ω–Ω—ã–µ —Ä–æ–ª–∏:",
                        value="\n".join(added_roles),
                        inline=False
                    )
                user_embed.add_field(
                    name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä",
                    value=interaction.user.mention,
                    inline=True
                )
                user_embed.set_footer(text="–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –≤—Ä–µ–º—è–ø—Ä–µ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!")
                
                await user.send(embed=user_embed)
            except:
                pass  # –ï—Å–ª–∏ –õ–° –∑–∞–∫—Ä—ã—Ç—ã
            
            await interaction.response.send_message("‚úÖ –ó–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞!", ephemeral=True)
            
            # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
            await self.log_action(interaction, "approved", user)
            
        else:
            await interaction.response.send_message("‚ùå –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!", ephemeral=True)

    @ui.button(label="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", style=discord.ButtonStyle.danger, custom_id="reject")
    async def reject_button(self, interaction: discord.Interaction, button: ui.Button):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
        if not await self.check_moderator(interaction):
            return
        
        user = interaction.guild.get_member(self.user_id)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏
        if self.user_id in pending_requests:
            pending_requests[self.user_id]['status'] = 'rejected'
            pending_requests[self.user_id]['moderator'] = str(interaction.user)
            pending_requests[self.user_id]['processed_at'] = datetime.now()
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏
        embed = interaction.message.embeds[0]
        embed.color = 0xff0000
        embed.add_field(name="‚ùå –°—Ç–∞—Ç—É—Å", value="–û—Ç–∫–ª–æ–Ω–µ–Ω–æ", inline=True)
        embed.add_field(name="üëÆ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=interaction.user.mention, inline=True)
        embed.add_field(name="‚è∞ –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏", value=datetime.now().strftime("%H:%M"), inline=True)
        
        # –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫–∏
        for item in self.children:
            item.disabled = True
        
        await interaction.message.edit(embed=embed, view=self)
        
        # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        try:
            user_embed = discord.Embed(
                title="‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞",
                description=f"–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é **{self.organization}** –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º.",
                color=0xff0000
            )
            user_embed.add_field(
                name="–ü—Ä–∏—á–∏–Ω–∞",
                value="–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞.",
                inline=False
            )
            await user.send(embed=user_embed)
        except:
            pass  # –ï—Å–ª–∏ –õ–° –∑–∞–∫—Ä—ã—Ç—ã
        
        await interaction.response.send_message("‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞!", ephemeral=True)
        
        # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
        await self.log_action(interaction, "rejected", user)

    @ui.button(label="üìä –ó–∞–ø—Ä–æ—Å–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É", style=discord.ButtonStyle.primary, custom_id="request_stats")
    async def request_stats_button(self, interaction: discord.Interaction, button: ui.Button):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
        if not await self.check_moderator(interaction):
            return
        
        user = interaction.guild.get_member(self.user_id)
        if not user:
            await interaction.response.send_message("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!", ephemeral=True)
            return
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        stat_request_id = f"stat_{self.user_id}_{int(datetime.now().timestamp())}"
        stat_requests[stat_request_id] = {
            'moderator_id': interaction.user.id,
            'user_id': self.user_id,
            'timestamp': datetime.now(),
            'request_id': self.request_id
        }
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        try:
            stats_view = UserStatsView(stat_request_id, interaction.user)
            
            stats_embed = discord.Embed(
                title="üìä –ó–∞–ø—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏",
                description="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –∑–∞–ø—Ä–æ—Å–∏–ª –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏.",
                color=0x0099ff
            )
            stats_embed.add_field(
                name="–ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å?",
                value="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.",
                inline=False
            )
            stats_embed.add_field(
                name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä",
                value=interaction.user.mention,
                inline=True
            )
            stats_embed.add_field(
                name="–ó–∞—è–≤–∫–∞",
                value=self.organization,
                inline=True
            )
            stats_embed.set_footer(text="–≠—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º –±—ã—Å—Ç—Ä–µ–µ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∞—à—É –∑–∞—è–≤–∫—É")
            
            await user.send(embed=stats_embed, view=stats_view)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏
            embed = interaction.message.embeds[0]
            embed.add_field(
                name="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                value="‚úÖ –ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é",
                inline=True
            )
            await interaction.message.edit(embed=embed)
            
            await interaction.response.send_message(
                f"‚úÖ –ó–∞–ø—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.mention}!",
                ephemeral=True
            )
            
        except Exception as e:
            await interaction.response.send_message(
                f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {str(e)}",
                ephemeral=True
            )

    async def check_moderator(self, interaction):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º"""
        moderator_role = interaction.guild.get_role(MODERATOR_ROLE_ID)
        if moderator_role not in interaction.user.roles:
            await interaction.response.send_message(
                "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –∑–∞—è–≤–æ–∫!",
                ephemeral=True
            )
            return False
        return True

    async def log_action(self, interaction, action, target_user):
        """–õ–æ–≥–∏—Ä—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤"""
        log_channel = interaction.guild.get_channel(LOG_CHANNEL_ID)
        if log_channel:
            embed = discord.Embed(
                title="üìù –õ–æ–≥ –º–æ–¥–µ—Ä–∞—Ü–∏–∏",
                color=0x7289da,
                timestamp=datetime.now()
            )
            embed.add_field(name="–î–µ–π—Å—Ç–≤–∏–µ", value="–û–¥–æ–±—Ä–µ–Ω–æ" if action == "approved" else "–û—Ç–∫–ª–æ–Ω–µ–Ω–æ", inline=True)
            embed.add_field(name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=interaction.user.mention, inline=True)
            embed.add_field(name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=target_user.mention, inline=True)
            embed.add_field(name="–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è", value=self.organization, inline=True)
            embed.add_field(name="ID –∑–∞—è–≤–∫–∏", value=self.request_id, inline=False)
            
            await log_channel.send(embed=embed)

class UserStatsView(ui.View):
    def __init__(self, stat_request_id, moderator):
        super().__init__(timeout=3600)  # 1 —á–∞—Å —Ç–∞–π–º–∞—É—Ç
        self.stat_request_id = stat_request_id
        self.moderator = moderator

    @ui.button(label="üìã –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é", style=discord.ButtonStyle.primary)
    async def provide_info_button(self, interaction: discord.Interaction, button: ui.Button):
        # –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        modal = UserStatsModal(self.stat_request_id, self.moderator)
        await interaction.response.send_modal(modal)

class UserStatsModal(ui.Modal, title='üìä –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'):
    def __init__(self, stat_request_id, moderator):
        super().__init__()
        self.stat_request_id = stat_request_id
        self.moderator = moderator

    experience = ui.TextInput(
        label='–û–ø—ã—Ç –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏',
        placeholder='–û–ø–∏—à–∏—Ç–µ –≤–∞—à –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –∏–ª–∏ —É—á–∞—Å—Ç–∏—è –≤ –ø–æ–¥–æ–±–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ö...',
        style=discord.TextStyle.paragraph,
        max_length=500,
        required=True
    )

    motivation = ui.TextInput(
        label='–¶–µ–ª–∏ –∏ –º–æ—Ç–∏–≤–∞—Ü–∏—è',
        placeholder='–ü–æ—á–µ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —ç—Ç–∏ —Ä–æ–ª–∏? –ö–∞–∫–∏–µ —É –≤–∞—Å —Ü–µ–ª–∏?...',
        style=discord.TextStyle.paragraph,
        max_length=500,
        required=True
    )

    additional_info = ui.TextInput(
        label='–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
        placeholder='–õ—é–±–∞—è –¥—Ä—É–≥–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω–∞...',
        style=discord.TextStyle.paragraph,
        max_length=500,
        required=False
    )

    async def on_submit(self, interaction: discord.Interaction):
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É
        try:
            mod_embed = discord.Embed(
                title="üìä –ü–æ–ª—É—á–µ–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                color=0x00ff00,
                timestamp=datetime.now()
            )
            mod_embed.add_field(name="üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=interaction.user.mention, inline=True)
            mod_embed.add_field(name="üìÖ –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞", value=datetime.now().strftime("%H:%M"), inline=True)
            mod_embed.add_field(name="üíº –û–ø—ã—Ç", value=self.experience.value, inline=False)
            mod_embed.add_field(name="üéØ –ú–æ—Ç–∏–≤–∞—Ü–∏—è", value=self.motivation.value, inline=False)
            
            if self.additional_info.value:
                mod_embed.add_field(name="üìù –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ", value=self.additional_info.value, inline=False)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É –≤ –õ–°
            try:
                await self.moderator.send(embed=mod_embed)
            except:
                # –ï—Å–ª–∏ –õ–° –∑–∞–∫—Ä—ã—Ç—ã, –∏—â–µ–º –∫–∞–Ω–∞–ª –¥–ª—è –∑–∞—è–≤–æ–∫
                mod_channel = interaction.guild.get_channel(PENDING_REQUESTS_CHANNEL_ID)
                if mod_channel:
                    await mod_channel.send(
                        content=f"{self.moderator.mention}",
                        embed=mod_embed
                    )
            
            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            confirm_embed = discord.Embed(
                title="‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!",
                description="–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –ø–æ–ª—É—á–∏–ª –≤–∞—à–∏ –æ—Ç–≤–µ—Ç—ã –∏ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç –∑–∞—è–≤–∫—É –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
                color=0x00ff00
            )
            await interaction.response.send_message(embed=confirm_embed, ephemeral=True)
            
            # –£–¥–∞–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
            if self.stat_request_id in stat_requests:
                del stat_requests[self.stat_request_id]
                
        except Exception as e:
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                ephemeral=True
            )

class RemoveRolesButton(ui.Button):
    def __init__(self):
        super().__init__(
            label="–°–Ω—è—Ç—å —Ä–æ–ª–∏",
            style=discord.ButtonStyle.danger,
            custom_id="remove_roles"
        )

    async def callback(self, interaction: discord.Interaction):
        user = interaction.user
        removed_roles = []
        
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ä–æ–ª–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π
        for org_roles in ROLES_BY_ORGANIZATION.values():
            for role_id in org_roles:
                role = interaction.guild.get_role(role_id)
                if role and role in user.roles:
                    await user.remove_roles(role)
                    removed_roles.append(role.name)
        
        if removed_roles:
            embed = discord.Embed(
                title="‚úÖ –†–æ–ª–∏ —Å–Ω—è—Ç—ã!",
                description="–í—Å–µ —Ä–æ–ª–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã.",
                color=0xffa500
            )
            embed.add_field(
                name="–°–Ω—è—Ç—ã–µ —Ä–æ–ª–∏:",
                value="\n".join(removed_roles),
                inline=False
            )
        else:
            embed = discord.Embed(
                title="‚ÑπÔ∏è –†–æ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã",
                description="–£ –≤–∞—Å –Ω–µ –±—ã–ª–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–æ–ª–µ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π.",
                color=0xffff00
            )
        
        await interaction.response.send_message(embed=embed, ephemeral=True)

class CancelButton(ui.Button):
    def __init__(self):
        super().__init__(
            label="–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å",
            style=discord.ButtonStyle.secondary,
            custom_id="cancel_request"
        )

    async def callback(self, interaction: discord.Interaction):
        # –£–¥–∞–ª—è–µ–º pending –∑–∞—è–≤–∫—É –µ—Å–ª–∏ –µ—Å—Ç—å
        if interaction.user.id in pending_requests:
            del pending_requests[interaction.user.id]
        
        embed = discord.Embed(
            title="‚ùå –ó–∞–ø—Ä–æ—Å –æ—Ç–º–µ–Ω–µ–Ω",
            description="–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Ä–æ–ª–∏ –ø–æ–∑–∂–µ.",
            color=0xff0000
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)

class RoleRequestView(ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(OrganizationSelect())
        self.add_item(RemoveRolesButton())
        self.add_item(CancelButton())

@bot.event
async def on_ready():
    print(f'–ë–æ—Ç {bot.user.name} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!')
    print(f'ID –±–æ—Ç–∞: {bot.user.id}')
    print('------')
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ–µ view
    bot.add_view(RoleRequestView())
    bot.add_view(ModerationView("init", 0, "init"))

@bot.command(name='–Ω–∞—Å—Ç—Ä–æ–π–∫–∞_—Ä–æ–ª–µ–π')
@commands.has_permissions(administrator=True)
async def setup_roles(ctx):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã —Ä–æ–ª–µ–π (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)"""
    
    welcome_text = """# –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –∫–∞–Ω–∞–ª #–≥-–∑–∞–ø—Ä–æ—Å-—Ä–æ–ª–∏!

**–°–∏—Å—Ç–µ–º–∞ –≤—ã–¥–∞—á–∏ —Ä–æ–ª–µ–π —Å –º–æ–¥–µ—Ä–∞—Ü–∏–µ–π**

–î–ª—è –∑–∞–ø—Ä–æ—Å–∞ —Ä–æ–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é –Ω–∏–∂–µ. 
–ó–∞—è–≤–∫–∞ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º.

‚è≥ –í—Ä–µ–º—è —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è: –æ–±—ã—á–Ω–æ –¥–æ 24 —á–∞—Å–æ–≤"""

    embed = discord.Embed(
        title="üéØ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—Ä–æ—Å–∞ —Ä–æ–ª–µ–π —Å –º–æ–¥–µ—Ä–∞—Ü–∏–µ–π",
        description=welcome_text,
        color=0x7289da
    )
    
    embed.add_field(
        name="üìã –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:",
        value="1. üè¢ –í—ã–±–µ—Ä–∏—Ç–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é –∏–∑ —Å–ø–∏—Å–∫–∞\n"
              "2. üì® –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º\n"
              "3. ‚è≥ –û–∂–∏–¥–∞–π—Ç–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è (–ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ)\n"
              "4. ‚úÖ –ü—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ - —Ä–æ–ª–∏ –±—É–¥—É—Ç –≤—ã–¥–∞–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\n"
              "5. üóëÔ∏è '–°–Ω—è—Ç—å —Ä–æ–ª–∏' - —É–¥–∞–ª—è–µ—Ç –≤—Å–µ –≤–∞—à–∏ —Ä–æ–ª–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π",
        inline=False
    )
    
    embed.set_footer(text="–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º —Å–µ—Ä–≤–µ—Ä–∞")
    
    await ctx.send(embed=embed, view=RoleRequestView())
    await ctx.message.delete()

@bot.command(name='–∑–∞—è–≤–∫–∏')
@commands.has_permissions(administrator=True)
async def show_requests(ctx):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ pending –∑–∞—è–≤–∫–∏"""
    pending_count = sum(1 for req in pending_requests.values() if req['status'] == 'pending')
    stat_requests_count = len(stat_requests)
    
    embed = discord.Embed(
        title="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞—è–≤–æ–∫",
        color=0x7289da
    )
    embed.add_field(name="‚è≥ –û–∂–∏–¥–∞—é—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è", value=pending_count, inline=True)
    embed.add_field(name="üìã –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏", value=stat_requests_count, inline=True)
    embed.add_field(name="üìà –í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫", value=len(pending_requests), inline=True)
    
    if pending_requests:
        pending_list = []
        for user_id, request in list(pending_requests.items())[:5]:
            if request['status'] == 'pending':
                user = ctx.guild.get_member(user_id)
                username = user.mention if user else request['username']
                time_ago = (datetime.now() - request['timestamp']).seconds // 60
                pending_list.append(f"{username} - {request['organization']} ({time_ago} –º–∏–Ω. –Ω–∞–∑–∞–¥)")
        
        if pending_list:
            embed.add_field(
                name="üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞—è–≤–∫–∏:",
                value="\n".join(pending_list),
                inline=False
            )
    
    await ctx.send(embed=embed)

@bot.command(name='–æ—á–∏—Å—Ç–∏—Ç—å_–∑–∞—è–≤–∫–∏')
@commands.has_permissions(administrator=True)
async def clear_old_requests(ctx, days: int = 7):
    """–û—á–∏—â–∞–µ—Ç —Å—Ç–∞—Ä—ã–µ –∑–∞—è–≤–∫–∏"""
    cutoff_date = datetime.now().timestamp() - (days * 24 * 60 * 60)
    removed_count = 0
    
    for user_id in list(pending_requests.keys()):
        request = pending_requests[user_id]
        if request['timestamp'].timestamp() < cutoff_date:
            del pending_requests[user_id]
            removed_count += 1
    
    embed = discord.Embed(
        title="üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –∑–∞—è–≤–æ–∫",
        description=f"–£–¥–∞–ª–µ–Ω–æ {removed_count} –∑–∞—è–≤–æ–∫ —Å—Ç–∞—Ä—à–µ {days} –¥–Ω–µ–π.",
        color=0x00ff00
    )
    await ctx.send(embed=embed)

@bot.command(name='–æ—á–∏—Å—Ç–∏—Ç—å_—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É')
@commands.has_permissions(administrator=True)
async def clear_old_stats(ctx, hours: int = 24):
    """–û—á–∏—â–∞–µ—Ç —Å—Ç–∞—Ä—ã–µ –∑–∞–ø—Ä–æ—Å—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    cutoff_time = datetime.now().timestamp() - (hours * 60 * 60)
    removed_count = 0
    
    for stat_id in list(stat_requests.keys()):
        request = stat_requests[stat_id]
        if request['timestamp'].timestamp() < cutoff_time:
            del stat_requests[stat_id]
            removed_count += 1
    
    embed = discord.Embed(
        title="üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏",
        description=f"–£–¥–∞–ª–µ–Ω–æ {removed_count} –∑–∞–ø—Ä–æ—Å–æ–≤ —Å—Ç–∞—Ä—à–µ {hours} —á–∞—Å–æ–≤.",
        color=0x00ff00
    )
    await ctx.send(embed=embed)

@bot.command(name='–¥–æ–±–∞–≤–∏—Ç—å_–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é')
@commands.has_permissions(administrator=True)
async def add_organization(ctx, –Ω–∞–∑–≤–∞–Ω–∏–µ: str, *—Ä–æ–ª–∏: discord.Role):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—É—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é –≤ —Å–∏—Å—Ç–µ–º—É"""
    if –Ω–∞–∑–≤–∞–Ω–∏–µ in ROLES_BY_ORGANIZATION:
        await ctx.send("‚ùå –≠—Ç–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
        return
    
    role_ids = [role.id for role in —Ä–æ–ª–∏]
    ROLES_BY_ORGANIZATION[–Ω–∞–∑–≤–∞–Ω–∏–µ] = role_ids
    
    embed = discord.Embed(
        title="‚úÖ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞!",
        description=f"–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è **{–Ω–∞–∑–≤–∞–Ω–∏–µ}** –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–∏—Å—Ç–µ–º—É.",
        color=0x00ff00
    )
    embed.add_field(
        name="–î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —Ä–æ–ª–∏:",
        value="\n".join([role.mention for role in —Ä–æ–ª–∏]),
        inline=False
    )
    
    await ctx.send(embed=embed)

@bot.command(name='—Å–ø–∏—Å–æ–∫_–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π')
@commands.has_permissions(administrator=True)
async def list_organizations(ctx):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π"""
    embed = discord.Embed(
        title="üè¢ –°–ø–∏—Å–æ–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π",
        color=0x7289da
    )
    
    for org_name, role_ids in ROLES_BY_ORGANIZATION.items():
        roles = []
        for role_id in role_ids:
            role = ctx.guild.get_role(role_id)
            if role:
                roles.append(role.name)
        
        embed.add_field(
            name=org_name,
            value=", ".join(roles) if roles else "–†–æ–ª–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã",
            inline=False
        )
    
    await ctx.send(embed=embed)

# –§–æ–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö
@tasks.loop(hours=24)
async def cleanup_old_data():
    """–û—á–∏—â–∞–µ—Ç —Å—Ç–∞—Ä—ã–µ –∑–∞—è–≤–∫–∏ –∏ –∑–∞–ø—Ä–æ—Å—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    current_time = datetime.now().timestamp()
    
    # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞—è–≤–∫–∏ (—Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π)
    for user_id in list(pending_requests.keys()):
        request = pending_requests[user_id]
        if request['timestamp'].timestamp() < current_time - (7 * 24 * 60 * 60):
            del pending_requests[user_id]
    
    # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–ø—Ä–æ—Å—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (—Å—Ç–∞—Ä—à–µ 24 —á–∞—Å–æ–≤)
    for stat_id in list(stat_requests.keys()):
        request = stat_requests[stat_id]
        if request['timestamp'].timestamp() < current_time - (24 * 60 * 60):
            del stat_requests[stat_id]

@cleanup_old_data.before_loop
async def before_cleanup():
    await bot.wait_until_ready()

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—É—é –∑–∞–¥–∞—á—É –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞
@bot.event
async def on_connect():
    cleanup_old_data.start()

if __name__ == "__main__":
    token = os.getenv('DISCORD_TOKEN')
    if token:
        bot.run(token)
    else:
        print("–û—à–∏–±–∫–∞: –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω! –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª .env —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç DISCORD_TOKEN")